{"ast":null,"code":"var _jsxFileName = \"/home/modi/remote-mon-web/src/routes/login.js\";\nimport React, { Component } from 'react';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport \"../routes/register\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.login = () => {\n      let validation2 = this.validator2.validate(this.state);\n      this.setState({\n        validation2\n      });\n      this.submitted2 = true;\n\n      if (validation2.isValid) {\n        this.submitted2 = false;\n        this.setState({\n          validation2: this.validator2.valid()\n        });\n        let payload = {\n          email: this.state.emailLogin,\n          password: this.state.passLogin\n        };\n        payload.password = Crypto.createHmac(\"sha512\", secret).update(payload.password).digest(\"hex\");\n        User.login(payload).then(res => {\n          console.log(res);\n          User.setUser(res);\n          let two_FA = res.two_FA;\n          console.log(\" this is twofa\", two_FA, two_FA === 0);\n\n          if (two_FA === 0) {\n            NotificationManager.success('', \"Login successful\", 3000, null, 100, 'primary');\n            this.toggle();\n            this.props.history.push('/dashboard');\n          } else {\n            NotificationManager.success('', \"OTP sent successfully\", 3000, null, 100, 'primary');\n            this.setState({\n              two_fa_otp: true\n            });\n          }\n        }).catch(err => {\n          console.log(err.response);\n\n          if (err.response.data.msg === \"Verify email\") {\n            this.setState({\n              resend_confirmation: true\n            });\n          }\n\n          if (err.response.data.msg === \"Invalid password\") {\n            this.setState({\n              forgot_password: true\n            });\n          }\n\n          NotificationManager.error('', err.response.data.msg, 3000, null, 100, 'primary');\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      submitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          email = _e$target.email,\n          value = _e$target.value;\n    this.setState({\n      [email]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n    if (email && password) {\n      this.props.login(email, password);\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          submitted = _this$state2.submitted;\n    return React.createElement(\"div\", {\n      style: {\n        height: \"90vh\",\n        display: \"grid\",\n        placeContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"col-md-6 col-md-offset-3 border\",\n      style: {\n        minWidth: \"50vw\" //     margin: \"10vh 50vh\",\n        //     height: \"100vh\",\n        //     width: \"100vw\",\n        //     // marginLeft: '50vh',\n        //     // alignItems: 'center',\n        //     // justifyContent: 'space-between'\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        color: \"#ff9505\",\n        fontWeight: \"bold\",\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Form, {\n      name: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), submitted && !email && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"email is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), submitted && !password && React.createElement(\"div\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Password is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"success\",\n      size: \"sm\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, ' ', \"Login\"), this.state.forgot_password && React.createElement(Link, {\n      to: \"/register\",\n      style: {\n        marginLeft: 3\n      },\n      onClick: this.forgotPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"forget password?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Register\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/modi/remote-mon-web/src/routes/login.js"],"names":["React","Component","Container","Col","Form","FormGroup","Label","Input","Button","Card","CardBody","Link","Login","constructor","props","login","validation2","validator2","validate","state","setState","submitted2","isValid","valid","payload","email","emailLogin","password","passLogin","Crypto","createHmac","secret","update","digest","User","then","res","console","log","setUser","two_FA","NotificationManager","success","toggle","history","push","two_fa_otp","catch","err","response","data","msg","resend_confirmation","forgot_password","error","submitted","handleChange","bind","handleSubmit","e","target","value","preventDefault","render","height","display","placeContent","minWidth","color","fontWeight","textAlign","marginLeft","forgotPassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Container, Col, Form,\n    FormGroup, Label, Input,\n    Button, Card, CardBody,\n} from 'reactstrap';\nimport { Link }\n    from 'react-router-dom';\nimport { } from \"../routes/register\"\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            submitted: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { email, value } = e.target;\n        this.setState({ [email]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({ submitted: true });\n        const { email, password } = this.state;\n        if (email && password) {\n            this.props.login(email, password);\n        }\n    }\n    login = () => {\n        let validation2 = this.validator2.validate(this.state);\n\n        this.setState({ validation2 });\n        this.submitted2 = true;\n        if (validation2.isValid) {\n            this.submitted2 = false;\n            this.setState({\n                validation2: this.validator2.valid()\n            });\n\n            let payload = {\n                email: this.state.emailLogin,\n                password: this.state.passLogin\n            }\n\n            payload.password = Crypto\n                .createHmac(\"sha512\", secret)\n                .update(payload.password)\n                .digest(\"hex\");\n\n            User.login(payload).then(res => {\n                console.log(res)\n                User.setUser(res);\n\n                let { two_FA } = res;\n                console.log(\" this is twofa\", two_FA, two_FA === 0)\n                if (two_FA === 0) {\n\n                    NotificationManager.success('', \"Login successful\", 3000, null, 100, 'primary');\n                    this.toggle();\n                    this.props.history.push('/dashboard')\n\n\n                } else {\n\n                    NotificationManager.success('', \"OTP sent successfully\", 3000, null, 100, 'primary');\n                    this.setState({ two_fa_otp: true })\n                }\n\n\n            }).catch(err => {\n                console.log(err.response);\n                if (err.response.data.msg === \"Verify email\") {\n                    this.setState({ resend_confirmation: true })\n                }\n                if (err.response.data.msg === \"Invalid password\") {\n                    this.setState({ forgot_password: true })\n                }\n                NotificationManager.error('', err.response.data.msg, 3000, null, 100, 'primary');\n            })\n        }\n\n\n    }\n\n    render() {\n\n        const { email, password, submitted } = this.state;\n        return (\n            <div style={{\n                height: \"90vh\",\n                display: \"grid\",\n                placeContent: \"center\",\n            }}> <div className=\"col-md-6 col-md-offset-3 border\"\n                style={{\n                    minWidth: \"50vw\",\n                    //     margin: \"10vh 50vh\",\n                    //     height: \"100vh\",\n                    //     width: \"100vw\",\n                    //     // marginLeft: '50vh',\n                    //     // alignItems: 'center',\n                    //     // justifyContent: 'space-between'\n                }}\n            >\n\n\n                    <h2 style={{\n                        color: \"#ff9505\",\n                        fontWeight: \"bold\",\n                        textAlign: 'center'\n\n                    }}>Login</h2>\n                    <Form name=\"form\" onSubmit={this.handleSubmit} >\n                        <FormGroup >\n                            <Label for=\"exampleEmail\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" onChange={this.handleChange} />\n                            {submitted && !email &&\n                                <div>email is required</div>\n                            }\n                        </FormGroup>\n                        <FormGroup >\n                            <Label for=\"examplePassword\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"examplePassword\" onChange={this.handleChange} />\n                            {submitted && !password &&\n                                <div className=\"help-block\">Password is required</div>\n                            }\n                        </FormGroup>\n                        <FormGroup >\n                            <br />\n                            <Button color=\"success\" size='sm' onClick={this.login}>\n                                {' '}\n                                Login</Button>\n                            {this.state.forgot_password && (\n                                <Link to='/register' style={{ marginLeft: 3 }} onClick={this.forgotPassword}>forget password?</Link>\n                            )}\n                            {/* <Button color=\"link\" >Register</Button> */}\n                            <br />\n                            <Link to='/register'>Register</Link>\n\n                        </FormGroup>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}