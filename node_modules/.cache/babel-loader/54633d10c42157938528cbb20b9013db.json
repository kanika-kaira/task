{"ast":null,"code":"import _objectSpread from \"/home/modi/remote-mon-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/modi/remote-mon-web/src/routes/history.js\";\nimport { DateRangeInput, DateSingleInput, Datepicker } from '@datepicker-react/styled';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport React, { Component } from 'react';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Card, CardBody } from 'reactstrap';\nexport default class History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  reducer(state, action) {\n    switch (action.type) {\n      case 'focusChange':\n        return _objectSpread({}, state, {\n          focusedInput: action.payload\n        });\n\n      case 'dateChange':\n        return action.payload;\n\n      default:\n        throw new Error();\n    }\n  } // App() {\n  //     const [state, dispatch] = useReducer(reducer, initialState)\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(DateRangeInput, {\n      startDate: this.state.startDate // Date or null\n      ,\n      endDate: this.state.endDate // Date or null\n      ,\n      focusedInput: this.state.focusedInput // START_DATE, END_DATE or null\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/modi/remote-mon-web/src/routes/history.js"],"names":["DateRangeInput","DateSingleInput","Datepicker","SideNav","Toggle","Nav","NavItem","NavIcon","NavText","React","Component","Container","Col","Form","FormGroup","Label","Input","Button","Card","CardBody","History","constructor","props","state","startDate","endDate","focusedInput","reducer","action","type","payload","Error","render"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,eAAzB,EAA0CC,UAA1C,QAA4D,0BAA5D;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,OAAjD,QAAgE,2BAAhE;AACA,OAAO,kDAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACIC,SADJ,EACeC,GADf,EACoBC,IADpB,EAEIC,SAFJ,EAEeC,KAFf,EAEsBC,KAFtB,EAGIC,MAHJ,EAGYC,IAHZ,EAGkBC,QAHlB,QAIO,YAJP;AAMA,eAAe,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC3CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETC,MAAAA,OAAO,EAAE,IAFA;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AACDC,EAAAA,OAAO,CAACJ,KAAD,EAAQK,MAAR,EAAgB;AACnB,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,aAAL;AACI,iCAAYN,KAAZ;AAAmBG,UAAAA,YAAY,EAAEE,MAAM,CAACE;AAAxC;;AACJ,WAAK,YAAL;AACI,eAAOF,MAAM,CAACE,OAAd;;AACJ;AACI,cAAM,IAAIC,KAAJ,EAAN;AANR;AAQH,GAlB0C,CAoB3C;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAEI,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWC,SAF1B,CAEqC;AAFrC;AAGI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAHxB,CAGiC;AAHjC;AAII,MAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAJ7B,CAI2C;AAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAlC0C","sourcesContent":["import { DateRangeInput, DateSingleInput, Datepicker } from '@datepicker-react/styled'\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport React, { Component } from 'react'\n\nimport {\n    Container, Col, Form,\n    FormGroup, Label, Input,\n    Button, Card, CardBody,\n} from 'reactstrap';\n\nexport default class History extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startDate: null,\n            endDate: null,\n            focusedInput: null,\n        }\n    }\n    reducer(state, action) {\n        switch (action.type) {\n            case 'focusChange':\n                return { ...state, focusedInput: action.payload }\n            case 'dateChange':\n                return action.payload\n            default:\n                throw new Error()\n        }\n    }\n\n    // App() {\n    //     const [state, dispatch] = useReducer(reducer, initialState)\n\n    render() {\n        return (\n            <div>\n                <DateRangeInput\n\n                    startDate={this.state.startDate} // Date or null\n                    endDate={this.state.endDate} // Date or null\n                    focusedInput={this.state.focusedInput} // START_DATE, END_DATE or null\n                />\n            </div>\n        );\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}